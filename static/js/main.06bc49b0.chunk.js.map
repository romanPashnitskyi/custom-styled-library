{"version":3,"sources":["assets/icons/ArrowRight.tsx","../../src/components/Button/index.tsx","../../src/services/cardStyles.tsx","../../src/components/Card/index.tsx","App.tsx","index.tsx"],"names":["ArrowRight","color","rest","width","height","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeWidth","d","data-name","defaultProps","Button","passHref","target","minWidth","gray","lightGrey","shape","iconMargin","buttonClasses","cx","sty","type","fluid","small","ghost","buttonStyles","styles","renderButton","ref","htmlType","style","disabled","className","withShadow","onClick","Boolean","iconWrapper","marginRight","marginLeft","href","cardStyle","paddingStr","React","padding","res","styleList","paddingTop","paddingLeft","paddingRight","paddingBottom","cur","Card","App","maxWidth","margin","boxSizing","marginTop","Header","Body","iconRight","console","log","Footer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06bc49b0.chunk.js","sourcesContent":["import * as React from 'react';\n\ninterface PropTypes extends React.SVGProps<SVGSVGElement> {\n  color?: string;\n}\n\nconst ArrowRight: React.FC<PropTypes> = ({ color, ...rest }) => (\n  <svg width={18} height={14.828} viewBox=\"0 0 18 14.828\" {...rest}>\n    <g\n      fill=\"none\"\n      stroke={color}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeMiterlimit={10}\n      strokeWidth={2}\n    >\n      <path d=\"M1 7.414h16\" />\n      <path data-name=\"Shape\" d=\"M11 1.414l6 6-6 6\" />\n    </g>\n  </svg>\n);\n\nArrowRight.defaultProps = {\n  color: 'currentcolor',\n};\n\nexport default ArrowRight;\n","import * as React from 'react'\nimport cx from 'classnames'\n\nimport sty from './Button.module.scss'\n\ninterface PropTypes {\n  href?: string\n  as?: string\n  passHref?: boolean\n  target?: string\n  disabled?: boolean\n  ghost?: boolean\n  fluid?: boolean\n  gray?: boolean\n  lightGrey?: boolean\n  shape?: 'round' | undefined\n  styles?: React.CSSProperties\n  className?: string\n  children: React.ReactNode | string\n  type?: 'primary' | 'default' | 'contentLike' | undefined\n  htmlType?: 'submit' | undefined\n  icon?: React.ReactElement\n  iconRight?: React.ReactElement\n  iconMargin?: number\n  small?: boolean\n  medium?: boolean\n  minWidth?: number\n  withShadow?: boolean\n  onClick?: (event: React.SyntheticEvent) => void\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, PropTypes>(\n  (\n    {\n      href,\n      as,\n      passHref = false,\n      target = '_self',\n      disabled,\n      small,\n      medium,\n      minWidth = 'unset',\n      withShadow,\n      ghost,\n      fluid,\n      gray = false,\n      lightGrey = false,\n      type,\n      shape = undefined,\n      htmlType,\n      styles,\n      className,\n      icon,\n      iconRight,\n      iconMargin = 5,\n      children,\n      onClick,\n      ...rest\n    },\n    ref\n  ) => {\n    const buttonClasses = React.useMemo(\n      () =>\n        cx(\n          sty.button,\n          {\n            [sty.fluid]: fluid,\n            [sty.disabled]: disabled,\n            [sty.default]: type === 'default',\n            [sty.contentLike]: type === 'contentLike',\n            [sty.small]: small,\n            [sty.medium]: medium,\n            [sty.ghost]: ghost,\n            [sty.round]: shape === 'round',\n            [sty.gray]: gray,\n            [sty.lightGrey]: lightGrey\n          },\n          className\n        ),\n      [fluid, type, small, ghost, gray, shape]\n    )\n\n    const buttonStyles = React.useMemo(\n      () => ({\n        ...styles,\n        minWidth: `${minWidth}px` || styles?.minWidth\n      }),\n      [styles, minWidth]\n    )\n\n    const renderButton = (\n      <button\n        {...rest}\n        ref={ref}\n        type={htmlType}\n        style={buttonStyles}\n        disabled={disabled}\n        className={cx(\n          {\n            [sty.withShadow]: withShadow\n          },\n          buttonClasses\n        )}\n        onClick={onClick}\n      >\n        {Boolean(icon) && (\n          <span\n            className={sty.iconWrapper}\n            style={{ marginRight: `${iconMargin}px` }}\n          >\n            {icon}\n          </span>\n        )}\n        {children}\n        {Boolean(iconRight) && (\n          <span\n            className={sty.iconWrapper}\n            style={{ marginLeft: `${iconMargin}px` }}\n          >\n            {iconRight}\n          </span>\n        )}\n      </button>\n    )\n\n    if (href) {\n      return (\n        <a href={href} target={target}>\n          {renderButton}\n        </a>\n      )\n    }\n\n    return renderButton\n  }\n)\n\nButton.defaultProps = {\n  disabled: false,\n  fluid: false,\n  className: '',\n  type: 'primary'\n}\n\nexport default Button\n","import React from 'react'\n\nexport const cardStyle = (\n  padding: number[] | undefined,\n  styles: React.CSSProperties | undefined\n) => {\n  const paddingStr = React.useMemo(\n    () => padding?.reduce((res: any, cur: any) => `${res} ${cur}px`, ''),\n    [padding]\n  )\n\n  const cardStyles = React.useMemo<React.CSSProperties>(() => {\n    const styleList: any[] = []\n\n    if (paddingStr) {\n      styleList.push({\n        paddingTop: 'inherit',\n        paddingLeft: 'inherit',\n        paddingRight: 'inherit',\n        paddingBottom: 'inherit',\n        padding: paddingStr\n      })\n    }\n\n    return styleList.reduce((res, cur) => ({ ...res, ...cur }), { ...styles })\n  }, [styles, padding])\n\n  return cardStyles\n}\n","import React from 'react'\nimport cx from 'classnames'\nimport { cardStyle } from '../../services/cardStyles'\n\nimport sty from './Card.module.scss'\n\ninterface CardElementPropTypes {\n  padding?: number[]\n  styles?: React.CSSProperties\n  className?: string\n  children: React.ReactNode | string\n}\n\nexport const CardHeader: React.FC<CardElementPropTypes> = ({\n  children,\n  padding,\n  styles,\n  className\n}) => {\n  return (\n    <div\n      style={cardStyle(padding, styles)}\n      className={cx(sty.header, className)}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport const CardBody: React.FC<CardElementPropTypes> = ({\n  children,\n  padding,\n  styles,\n  className\n}) => {\n  return (\n    <div style={cardStyle(padding, styles)} className={cx(sty.body, className)}>\n      {children}\n    </div>\n  )\n}\n\nexport const CardFooter: React.FC<CardElementPropTypes> = ({\n  children,\n  padding,\n  styles,\n  className\n}) => {\n  return (\n    <div\n      style={cardStyle(padding, styles)}\n      className={cx(sty.footer, className)}\n    >\n      {children}\n    </div>\n  )\n}\n\ninterface CompoundPropTypes {\n  Header: React.FC<CardElementPropTypes>\n  Body: React.FC<CardElementPropTypes>\n  Footer: React.FC<CardElementPropTypes>\n}\n\ninterface CardPropTypes {\n  padding?: number[]\n  styles?: React.CSSProperties\n  className?: string\n}\n\nconst Card: React.FC<CardPropTypes> & CompoundPropTypes = ({\n  children,\n  padding,\n  styles,\n  className\n}) => {\n  return (\n    <div style={cardStyle(padding, styles)} className={cx(sty.card, className)}>\n      {children}\n    </div>\n  )\n}\n\nCard.Header = CardHeader\nCard.Body = CardBody\nCard.Footer = CardFooter\n\nexport default Card\n","import React from 'react'\n\nimport ArrowRight from './assets/icons/ArrowRight'\nimport { Button, Card } from 'custom-styled-library'\nimport 'custom-styled-library/dist/index.css'\n\nconst App = () => {\n  const handleSubit = () => {\n    console.log('hi!')\n  }\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        maxWidth: '1371px',\n        margin: '0 auto',\n        padding: '0 1.5rem',\n        boxSizing: 'border-box'\n      }}\n    >\n      <Card styles={{ marginTop: '30px' }} padding={[10, 20, 30, 40]}>\n        <Card.Header padding={[50, 15]}>Title, some text ...</Card.Header>\n        <Card.Body padding={[12, 15]}>\n          Some body text ...\n          <Button\n            styles={{ marginTop: '30px' }}\n            // icon={<ArrowRight />}\n            iconMargin={20}\n            iconRight={<ArrowRight />}\n            // disabled\n            // withShadow\n            // shape='round'\n            // small\n            // medium\n            // minWidth={200}\n            // ghost\n            onClick={handleSubit}\n          >\n            btn text\n          </Button>\n        </Card.Body>\n        <Card.Footer padding={[12, 15]}>Footer text ...</Card.Footer>\n      </Card>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}